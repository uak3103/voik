#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.137                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

#XTOOLS=/opt/buildroot/buildroot-2010.05/output/target
#XTOOLS=/opt/work/uak/buildroot/output/target
XTOOLS=/opt/uak/buildroot/output/target
CC   =$(XTOOLS)/../staging/usr/bin/i486-unknown-linux-uclibc-gcc
CXX  =$(XTOOLS)/../staging/usr/bin/i486-unknown-linux-uclibc-g++
AR = ar
LD  = $(XTOOLS)/../staging/usr/bin/i486-unknown-linux-uclibc-g++
WINDRES = windres

WX_CONFIG_CFLAGS=-I$(XTOOLS)/usr/local/lib/wx/include/i486-linux-gtk2-unicode-2.9 \
	-I$(XTOOLS)/usr/local/include/wx-2.9 -D_FILE_OFFSET_BITS=64 \
	-DWXUSINGDLL -D__WXGTK__ -pthread
CFLAGS = -Wall $(WX_CONFIG_CFLAGS) \
	-Winvalid-pch -include wx_pch.h -DWX_PRECOMP -DGL_GLEXT_PROTOTYPES 

WX_CONFIG_LIBS_ALL=-L$(XTOOLS)/usr/local/lib -pthread \
	-lwx_gtk2u_xrc-2.9-i486-linux \
	-lwx_gtk2u_stc-2.9-i486-linux \
	-lwx_gtk2u_richtext-2.9-i486-linux \
	-lwx_gtk2u_ribbon-2.9-i486-linux \
	-lwx_gtk2u_propgrid-2.9-i486-linux \
	-lwx_gtk2u_aui-2.9-i486-linux \
	-lwx_gtk2u_gl-2.9-i486-linux \
	-lwx_gtk2u_html-2.9-i486-linux \
	-lwx_gtk2u_qa-2.9-i486-linux \
	-lwx_gtk2u_adv-2.9-i486-linux \
	-lwx_gtk2u_core-2.9-i486-linux \
	-lwx_baseu_xml-2.9-i486-linux \
	-lwx_baseu_net-2.9-i486-linux \
	-lwx_baseu-2.9-i486-linux

INC = -I$(XTOOLS)/usr/local/include \
	-I$(XTOOLS)/usr/lib/wx/include/gtk2-unicode-2.9 \
	-I$(XTOOLS)../staging/usr/include \
	-I$(XTOOLS)/usr/include/wx-2.9 

LDFLAGS = $(WX_CONFIG_LIBS_ALL) -L$(XTOOLS)/usr/local/lib \
	-L$(XTOOLS)../staging/usr/lib
RCFLAGS = 
LDLIBS = $(T_LDLIBS)  -lstdc++
RESINC = 
LIBDIR =
LIB = 

INC_DEBUG =  $(INC)
CFLAGS_DEBUG =  $(CFLAGS) -g -DwxUSE_DEBUGREPORT -D_WXDEBUG_
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG =  $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/PKVI.exe

INC_RELEASE =  $(INC)
CFLAGS_RELEASE =  $(CFLAGS) -O3 -O2 -O1 -O
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE =  $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/PKVI.exe

OBJ_DEBUG = $(OBJDIR_DEBUG)/pci_7841.o $(OBJDIR_DEBUG)/ccan.o $(OBJDIR_DEBUG)/CanPanel.o $(OBJDIR_DEBUG)/DatChoiceMain.o $(OBJDIR_DEBUG)/NetworkPanel.o $(OBJDIR_DEBUG)/PKVIApp.o $(OBJDIR_DEBUG)/PKVIMain.o $(OBJDIR_DEBUG)/PrProtMain.o $(OBJDIR_DEBUG)/ScreenWindow.o $(OBJDIR_DEBUG)/SettingsDlg.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/pci_7841.o $(OBJDIR_RELEASE)/ccan.o $(OBJDIR_RELEASE)/CanPanel.o $(OBJDIR_RELEASE)/DatChoiceMain.o $(OBJDIR_RELEASE)/NetworkPanel.o $(OBJDIR_RELEASE)/PKVIApp.o $(OBJDIR_RELEASE)/PKVIMain.o $(OBJDIR_RELEASE)/PrProtMain.o $(OBJDIR_RELEASE)/ScreenWindow.o $(OBJDIR_RELEASE)/SettingsDlg.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LDFLAGS_DEBUG) $(LIBDIR_DEBUG) $(OBJ_DEBUG) $(LIB_DEBUG) -o $(OUT_DEBUG)

$(OBJDIR_DEBUG)/pci_7841.o: pci_7841.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c pci_7841.cpp -o $(OBJDIR_DEBUG)/pci_7841.o

$(OBJDIR_DEBUG)/ccan.o: ccan.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ccan.cpp -o $(OBJDIR_DEBUG)/ccan.o

$(OBJDIR_DEBUG)/CanPanel.o: CanPanel.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c CanPanel.cpp -o $(OBJDIR_DEBUG)/CanPanel.o

$(OBJDIR_DEBUG)/DatChoiceMain.o: DatChoiceMain.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c DatChoiceMain.cpp -o $(OBJDIR_DEBUG)/DatChoiceMain.o

$(OBJDIR_DEBUG)/NetworkPanel.o: NetworkPanel.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c NetworkPanel.cpp -o $(OBJDIR_DEBUG)/NetworkPanel.o

$(OBJDIR_DEBUG)/PKVIApp.o: PKVIApp.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c PKVIApp.cpp -o $(OBJDIR_DEBUG)/PKVIApp.o

$(OBJDIR_DEBUG)/PKVIMain.o: PKVIMain.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c PKVIMain.cpp -o $(OBJDIR_DEBUG)/PKVIMain.o

$(OBJDIR_DEBUG)/PrProtMain.o: PrProtMain.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c PrProtMain.cpp -o $(OBJDIR_DEBUG)/PrProtMain.o

$(OBJDIR_DEBUG)/ScreenWindow.o: ScreenWindow.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ScreenWindow.cpp -o $(OBJDIR_DEBUG)/ScreenWindow.o

$(OBJDIR_DEBUG)/SettingsDlg.o: SettingsDlg.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c SettingsDlg.cpp -o $(OBJDIR_DEBUG)/SettingsDlg.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE) -o $(OUT_RELEASE)

$(OBJDIR_RELEASE)/pci_7841.o: pci_7841.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c pci_7841.cpp -o $(OBJDIR_RELEASE)/pci_7841.o

$(OBJDIR_RELEASE)/ccan.o: ccan.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ccan.cpp -o $(OBJDIR_RELEASE)/ccan.o

$(OBJDIR_RELEASE)/CanPanel.o: CanPanel.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c CanPanel.cpp -o $(OBJDIR_RELEASE)/CanPanel.o

$(OBJDIR_RELEASE)/DatChoiceMain.o: DatChoiceMain.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c DatChoiceMain.cpp -o $(OBJDIR_RELEASE)/DatChoiceMain.o

$(OBJDIR_RELEASE)/NetworkPanel.o: NetworkPanel.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c NetworkPanel.cpp -o $(OBJDIR_RELEASE)/NetworkPanel.o

$(OBJDIR_RELEASE)/PKVIApp.o: PKVIApp.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PKVIApp.cpp -o $(OBJDIR_RELEASE)/PKVIApp.o

$(OBJDIR_RELEASE)/PKVIMain.o: PKVIMain.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PKVIMain.cpp -o $(OBJDIR_RELEASE)/PKVIMain.o

$(OBJDIR_RELEASE)/PrProtMain.o: PrProtMain.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c PrProtMain.cpp -o $(OBJDIR_RELEASE)/PrProtMain.o

$(OBJDIR_RELEASE)/ScreenWindow.o: ScreenWindow.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ScreenWindow.cpp -o $(OBJDIR_RELEASE)/ScreenWindow.o

$(OBJDIR_RELEASE)/SettingsDlg.o: SettingsDlg.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c SettingsDlg.cpp -o $(OBJDIR_RELEASE)/SettingsDlg.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

